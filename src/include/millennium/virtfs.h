/**
 * Auto-generated by Millennium during CMake configuration - do not edit manually :)
 */

// clang-format off
std::unordered_map<std::string, std::function<const std::string()>> INTERNAL_FTP_CALL_DATA = {
	{ fmt::format("https://millennium.ftp/{}/millennium-frontend.js", GetScrambledApiPathToken()), []() { return SystemIO::ReadFileSync(MILLENNIUM_ROOT "/build/frontend.bin"); } },
	{ fmt::format("https://millennium.ftp/{}/millennium.js", GetScrambledApiPathToken()), []() { return SystemIO::ReadFileSync(MILLENNIUM_ROOT "/sdk/typescript-packages/loader/build/millennium.js"); } },
	{ fmt::format("https://millennium.ftp/{}/chunks/chunk-browser-init.js", GetScrambledApiPathToken()), []() { return SystemIO::ReadFileSync(MILLENNIUM_ROOT "/sdk/typescript-packages/loader/build/chunks/chunk-browser-init.js"); } },
	{ fmt::format("https://millennium.ftp/{}/chunks/chunk-index.js", GetScrambledApiPathToken()), []() { return SystemIO::ReadFileSync(MILLENNIUM_ROOT "/sdk/typescript-packages/loader/build/chunks/chunk-index.js"); } },
	{ fmt::format("https://millennium.ftp/{}/chunks/chunk-logger.js", GetScrambledApiPathToken()), []() { return SystemIO::ReadFileSync(MILLENNIUM_ROOT "/sdk/typescript-packages/loader/build/chunks/chunk-logger.js"); } },
	{ fmt::format("https://millennium.ftp/{}/chunks/chunk-millennium-api.js", GetScrambledApiPathToken()), []() { return SystemIO::ReadFileSync(MILLENNIUM_ROOT "/sdk/typescript-packages/loader/build/chunks/chunk-millennium-api.js"); } },
	{ fmt::format("https://millennium.ftp/{}/chunks/chunk-webpack.js", GetScrambledApiPathToken()), []() { return SystemIO::ReadFileSync(MILLENNIUM_ROOT "/sdk/typescript-packages/loader/build/chunks/chunk-webpack.js"); } }
};
// clang-format on
